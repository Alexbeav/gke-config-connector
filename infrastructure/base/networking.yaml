# Network Security Configuration
# VPC with private subnets, firewall rules, and secure networking

apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  name: secure-vpc
  labels:
    component: networking
    managed-by: config-connector
spec:
  autoCreateSubnetworks: false
  description: "Secure VPC for data platform with private subnets"
  routingMode: "REGIONAL"
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: private-subnet
  labels:
    component: networking
    managed-by: config-connector
spec:
  ipCidrRange: "10.0.0.0/24"
  networkRef:
    name: secure-vpc
  region: "us-central1"
  description: "Private subnet for GKE cluster"
  privateIpGoogleAccess: true
  secondaryIpRange:
    - rangeName: "pods"
      ipCidrRange: "10.1.0.0/16"
    - rangeName: "services"
      ipCidrRange: "10.2.0.0/16"
  logConfig:
    aggregationInterval: "INTERVAL_10_MIN"
    flowSampling: 0.5
    metadata: "INCLUDE_ALL_METADATA"
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: database-subnet
  labels:
    component: networking
    managed-by: config-connector
spec:
  ipCidrRange: "10.3.0.0/24"
  networkRef:
    name: secure-vpc
  region: "us-central1"
  description: "Private subnet for Cloud SQL and data services"
  privateIpGoogleAccess: true
---
# Firewall rule to allow internal communication
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeFirewall
metadata:
  name: allow-internal
  labels:
    component: networking
    managed-by: config-connector
spec:
  networkRef:
    name: secure-vpc
  description: "Allow internal communication within VPC"
  direction: "INGRESS"
  priority: 1000
  sourceRanges:
    - "10.0.0.0/8"
  allowed:
    - protocol: "TCP"
    - protocol: "UDP"
    - protocol: "ICMP"
  logConfig:
    metadata: "INCLUDE_ALL_METADATA"
---
# Firewall rule to deny all external ingress by default
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeFirewall
metadata:
  name: deny-all-ingress
  labels:
    component: networking
    managed-by: config-connector
spec:
  networkRef:
    name: secure-vpc
  description: "Deny all external ingress traffic"
  direction: "INGRESS"
  priority: 65534
  sourceRanges:
    - "0.0.0.0/0"
  denied:
    - protocol: "all"
  logConfig:
    metadata: "INCLUDE_ALL_METADATA"
---
# Cloud NAT for outbound internet access from private instances
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouter
metadata:
  name: nat-router
  labels:
    component: networking
    managed-by: config-connector
spec:
  networkRef:
    name: secure-vpc
  region: "us-central1"
  description: "Router for Cloud NAT"
---
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouterNAT
metadata:
  name: secure-nat
  labels:
    component: networking
    managed-by: config-connector
spec:
  routerRef:
    name: nat-router
  region: "us-central1"
  natIpAllocateOption: "AUTO_ONLY"
  sourceSubnetworkIpRangesToNat: "LIST_OF_SUBNETWORKS"
  subnetwork:
    - name: "private-subnet"
      sourceIpRangesToNat:
        - "ALL_IP_RANGES"
  logConfig:
    enable: true
    filter: "ALL"
---
# VPC Service Controls for data perimeter security
apiVersion: accesscontextmanager.cnrm.cloud.google.com/v1beta1
kind: AccessContextManagerServicePerimeter
metadata:
  name: data-platform-perimeter
  labels:
    component: security
    managed-by: config-connector
spec:
  accessPolicyRef:
    external: "accessPolicies/accessPolicies/123456789"
  title: "Data Platform Security Perimeter"
  description: "Service perimeter for data platform resources"
  perimeterType: "PERIMETER_TYPE_REGULAR"
  status:
    resources:
      - "projects/secure-gke-gitops-platform"
    restrictedServices:
      - "bigquery.googleapis.com"
      - "storage.googleapis.com"
      - "pubsub.googleapis.com"
      - "sqladmin.googleapis.com"
    accessLevels:
      - "accessPolicies/accessPolicies/123456789/accessLevels/corporate_network"
